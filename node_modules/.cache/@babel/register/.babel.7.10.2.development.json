{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Pedro o mais pica\\\\Documents\\\\code_igti\\\\grades-control-api\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Pedro o mais pica\\\\Documents\\\\code_igti\\\\grades-control-api\",\"filename\":\"C:\\\\Users\\\\Pedro o mais pica\\\\Documents\\\\code_igti\\\\grades-control-api\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Pedro o mais pica\\\\Documents\\\\code_igti\\\\grades-control-api\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api",
      "filename": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _app = _interopRequireDefault(require(\"./src/config/app\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_app[\"default\"].listen(3002, function () {\n  try {\n    _fs[\"default\"].readFile('accounts.json', 'utf-8', function (err, data) {\n      if (err) {\n        var dado = {\n          nextId: 1,\n          grades: []\n        };\n\n        _fs[\"default\"].writeFile(\"accounts.json\", JSON.stringify(dado), function (err) {});\n      }\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n\n  console.log(\"Server on\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJsaXN0ZW4iLCJmcyIsInJlYWRGaWxlIiwiZXJyIiwiZGF0YSIsImRhZG8iLCJuZXh0SWQiLCJncmFkZXMiLCJ3cml0ZUZpbGUiLCJKU09OIiwic3RyaW5naWZ5IiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7OztBQUVBQSxnQkFBSUMsTUFBSixDQUFXLElBQVgsRUFBaUIsWUFBTTtBQUNuQixNQUFJO0FBQ0hDLG1CQUFHQyxRQUFILENBQVksZUFBWixFQUE0QixPQUE1QixFQUFvQyxVQUFDQyxHQUFELEVBQUtDLElBQUwsRUFBWTtBQUM1QyxVQUFHRCxHQUFILEVBQU87QUFDSixZQUFJRSxJQUFJLEdBQUc7QUFDTkMsVUFBQUEsTUFBTSxFQUFDLENBREQ7QUFFTkMsVUFBQUEsTUFBTSxFQUFDO0FBRkQsU0FBWDs7QUFJQU4sdUJBQUdPLFNBQUgsQ0FBYSxlQUFiLEVBQTZCQyxJQUFJLENBQUNDLFNBQUwsQ0FBZUwsSUFBZixDQUE3QixFQUFrRCxVQUFBRixHQUFHLEVBQUUsQ0FDMUQsQ0FERztBQUVGO0FBQ0osS0FURDtBQVdBLEdBWkQsQ0FZRSxPQUFPUSxLQUFQLEVBQWM7QUFDWkMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLEtBQUssQ0FBQ0csT0FBbEI7QUFDSDs7QUFFQUYsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksV0FBWjtBQUNILENBbEJGIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcUGVkcm8gbyBtYWlzIHBpY2FcXERvY3VtZW50c1xcY29kZV9pZ3RpXFxncmFkZXMtY29udHJvbC1hcGlcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcHAgZnJvbSBcIi4vc3JjL2NvbmZpZy9hcHBcIjtcclxuaW1wb3J0IGZzIGZyb20gJ2ZzJztcclxuXHJcbmFwcC5saXN0ZW4oMzAwMiwgKCkgPT4ge1xyXG4gICAgdHJ5IHtcclxuICAgICBmcy5yZWFkRmlsZSgnYWNjb3VudHMuanNvbicsJ3V0Zi04JywoZXJyLGRhdGEpPT57XHJcbiAgICAgICAgIGlmKGVycil7ICAgIFxyXG4gICAgICAgICAgICBsZXQgZGFkbyA9IHtcclxuICAgICAgICAgICAgICAgICBuZXh0SWQ6MSxcclxuICAgICAgICAgICAgICAgICBncmFkZXM6W11cclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgZnMud3JpdGVGaWxlKFwiYWNjb3VudHMuanNvblwiLEpTT04uc3RyaW5naWZ5KGRhZG8pLGVycj0+e1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgICB9XHJcbiAgICAgfSk7IFxyXG4gICAgIFxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhlcnJvci5tZXNzYWdlKTtcclxuICAgIH1cclxuICBcclxuICAgICBjb25zb2xlLmxvZyhcIlNlcnZlciBvblwiKVxyXG4gfSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "listen",
        "fs",
        "readFile",
        "err",
        "data",
        "dado",
        "nextId",
        "grades",
        "writeFile",
        "JSON",
        "stringify",
        "error",
        "console",
        "log",
        "message"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEAA,gBAAIC,MAAJ,CAAW,IAAX,EAAiB,YAAM;AACnB,MAAI;AACHC,mBAAGC,QAAH,CAAY,eAAZ,EAA4B,OAA5B,EAAoC,UAACC,GAAD,EAAKC,IAAL,EAAY;AAC5C,UAAGD,GAAH,EAAO;AACJ,YAAIE,IAAI,GAAG;AACNC,UAAAA,MAAM,EAAC,CADD;AAENC,UAAAA,MAAM,EAAC;AAFD,SAAX;;AAIAN,uBAAGO,SAAH,CAAa,eAAb,EAA6BC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAA7B,EAAkD,UAAAF,GAAG,EAAE,CAC1D,CADG;AAEF;AACJ,KATD;AAWA,GAZD,CAYE,OAAOQ,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;;AAEAF,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,CAlBF",
      "sourceRoot": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\",
      "sourcesContent": [
        "import app from \"./src/config/app\";\r\nimport fs from 'fs';\r\n\r\napp.listen(3002, () => {\r\n    try {\r\n     fs.readFile('accounts.json','utf-8',(err,data)=>{\r\n         if(err){    \r\n            let dado = {\r\n                 nextId:1,\r\n                 grades:[]\r\n            };\r\n            fs.writeFile(\"accounts.json\",JSON.stringify(dado),err=>{\r\n        });\r\n         }\r\n     }); \r\n     \r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n  \r\n     console.log(\"Server on\")\r\n });"
      ]
    },
    "sourceType": "script",
    "mtime": 1591740161898
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Pedro o mais pica\\\\Documents\\\\code_igti\\\\grades-control-api\\\\src\\\\config\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Pedro o mais pica\\\\Documents\\\\code_igti\\\\grades-control-api\",\"filename\":\"C:\\\\Users\\\\Pedro o mais pica\\\\Documents\\\\code_igti\\\\grades-control-api\\\\src\\\\config\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Pedro o mais pica\\\\Documents\\\\code_igti\\\\grades-control-api\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\src\\config\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api",
      "filename": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\src\\config\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\src\\config\\app.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\src\\config\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\src\\config\\",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _RoutePerson = _interopRequireDefault(require(\"../routes/RoutePerson\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar App = /*#__PURE__*/function () {\n  function App() {\n    _classCallCheck(this, App);\n\n    this.express = (0, _express[\"default\"])();\n    this.middlewares();\n    this.routes();\n  }\n\n  _createClass(App, [{\n    key: \"middlewares\",\n    value: function middlewares() {\n      this.express.use(_express[\"default\"].json());\n    }\n  }, {\n    key: \"routes\",\n    value: function routes() {\n      this.express.use(_RoutePerson[\"default\"]);\n    }\n  }]);\n\n  return App;\n}();\n\nvar _default = new App().express;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJBcHAiLCJleHByZXNzIiwibWlkZGxld2FyZXMiLCJyb3V0ZXMiLCJ1c2UiLCJqc29uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7Ozs7Ozs7SUFFTUEsRztBQUNKLGlCQUFjO0FBQUE7O0FBQ1osU0FBS0MsT0FBTCxHQUFlLDBCQUFmO0FBRUEsU0FBS0MsV0FBTDtBQUNBLFNBQUtDLE1BQUw7QUFDRDs7OztrQ0FFYTtBQUNaLFdBQUtGLE9BQUwsQ0FBYUcsR0FBYixDQUFpQkgsb0JBQVFJLElBQVIsRUFBakI7QUFDRDs7OzZCQUVRO0FBQ1AsV0FBS0osT0FBTCxDQUFhRyxHQUFiLENBQWlCRCx1QkFBakI7QUFDRDs7Ozs7O2VBR1ksSUFBSUgsR0FBSixHQUFVQyxPIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcUGVkcm8gbyBtYWlzIHBpY2FcXERvY3VtZW50c1xcY29kZV9pZ3RpXFxncmFkZXMtY29udHJvbC1hcGlcXHNyY1xcY29uZmlnXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xyXG5pbXBvcnQgcm91dGVzIGZyb20gXCIuLi9yb3V0ZXMvUm91dGVQZXJzb25cIjtcclxuXHJcbmNsYXNzIEFwcCB7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICB0aGlzLmV4cHJlc3MgPSBleHByZXNzKCk7XHJcblxyXG4gICAgdGhpcy5taWRkbGV3YXJlcygpO1xyXG4gICAgdGhpcy5yb3V0ZXMoKTtcclxuICB9XHJcblxyXG4gIG1pZGRsZXdhcmVzKCkge1xyXG4gICAgdGhpcy5leHByZXNzLnVzZShleHByZXNzLmpzb24oKSk7XHJcbiAgfVxyXG5cclxuICByb3V0ZXMoKSB7XHJcbiAgICB0aGlzLmV4cHJlc3MudXNlKHJvdXRlcyk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBuZXcgQXBwKCkuZXhwcmVzczsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "App",
        "express",
        "middlewares",
        "routes",
        "use",
        "json"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;IAEMA,G;AACJ,iBAAc;AAAA;;AACZ,SAAKC,OAAL,GAAe,0BAAf;AAEA,SAAKC,WAAL;AACA,SAAKC,MAAL;AACD;;;;kCAEa;AACZ,WAAKF,OAAL,CAAaG,GAAb,CAAiBH,oBAAQI,IAAR,EAAjB;AACD;;;6BAEQ;AACP,WAAKJ,OAAL,CAAaG,GAAb,CAAiBD,uBAAjB;AACD;;;;;;eAGY,IAAIH,GAAJ,GAAUC,O",
      "sourceRoot": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\src\\config\\",
      "sourcesContent": [
        "import express from \"express\";\r\nimport routes from \"../routes/RoutePerson\";\r\n\r\nclass App {\r\n  constructor() {\r\n    this.express = express();\r\n\r\n    this.middlewares();\r\n    this.routes();\r\n  }\r\n\r\n  middlewares() {\r\n    this.express.use(express.json());\r\n  }\r\n\r\n  routes() {\r\n    this.express.use(routes);\r\n  }\r\n}\r\n\r\nexport default new App().express;"
      ]
    },
    "sourceType": "script",
    "mtime": 1591489810058
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Pedro o mais pica\\\\Documents\\\\code_igti\\\\grades-control-api\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Pedro o mais pica\\\\Documents\\\\code_igti\\\\grades-control-api\",\"filename\":\"C:\\\\Users\\\\Pedro o mais pica\\\\Documents\\\\code_igti\\\\grades-control-api\\\\src\\\\routes\\\\RoutePerson.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Pedro o mais pica\\\\Documents\\\\code_igti\\\\grades-control-api\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\src\\routes\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api",
      "filename": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\src\\routes\\RoutePerson.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\src\\routes\\RoutePerson.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\src\\routes\\RoutePerson.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\src\\routes\\",
        "sourceFileName": "RoutePerson.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _PersonController = _interopRequireDefault(require(\"../controllers/PersonController\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar route = (0, _express.Router)();\nroute.get(\"/search/:id\", _PersonController[\"default\"].searchStudent);\nroute.get(\"/list\", _PersonController[\"default\"].listStudent);\nroute.get(\"/note\", _PersonController[\"default\"].studentNote);\nroute.get(\"/average\", _PersonController[\"default\"].averageGrades);\nroute.get(\"/best\", _PersonController[\"default\"].bestGrades);\nroute.post(\"/create\", _PersonController[\"default\"].create);\nroute[\"delete\"](\"/delete/:id\", _PersonController[\"default\"].deleteStudent);\nroute.put(\"/update\", _PersonController[\"default\"].updateStudent);\nvar _default = route;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJvdXRlUGVyc29uLmpzIl0sIm5hbWVzIjpbInJvdXRlIiwiZ2V0IiwiUGVyc29uQ29udHJvbGxlciIsInNlYXJjaFN0dWRlbnQiLCJsaXN0U3R1ZGVudCIsInN0dWRlbnROb3RlIiwiYXZlcmFnZUdyYWRlcyIsImJlc3RHcmFkZXMiLCJwb3N0IiwiY3JlYXRlIiwiZGVsZXRlU3R1ZGVudCIsInB1dCIsInVwZGF0ZVN0dWRlbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQTs7OztBQUVBLElBQU1BLEtBQUssR0FBRyxzQkFBZDtBQUVBQSxLQUFLLENBQUNDLEdBQU4sQ0FBVSxhQUFWLEVBQXlCQyw2QkFBaUJDLGFBQTFDO0FBQ0FILEtBQUssQ0FBQ0MsR0FBTixDQUFVLE9BQVYsRUFBbUJDLDZCQUFpQkUsV0FBcEM7QUFDQUosS0FBSyxDQUFDQyxHQUFOLENBQVUsT0FBVixFQUFtQkMsNkJBQWlCRyxXQUFwQztBQUNBTCxLQUFLLENBQUNDLEdBQU4sQ0FBVSxVQUFWLEVBQXNCQyw2QkFBaUJJLGFBQXZDO0FBQ0FOLEtBQUssQ0FBQ0MsR0FBTixDQUFVLE9BQVYsRUFBbUJDLDZCQUFpQkssVUFBcEM7QUFFQVAsS0FBSyxDQUFDUSxJQUFOLENBQVcsU0FBWCxFQUFzQk4sNkJBQWlCTyxNQUF2QztBQUVBVCxLQUFLLFVBQUwsQ0FBYSxhQUFiLEVBQTRCRSw2QkFBaUJRLGFBQTdDO0FBQ0FWLEtBQUssQ0FBQ1csR0FBTixDQUFVLFNBQVYsRUFBcUJULDZCQUFpQlUsYUFBdEM7ZUFHZVosSyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFBlZHJvIG8gbWFpcyBwaWNhXFxEb2N1bWVudHNcXGNvZGVfaWd0aVxcZ3JhZGVzLWNvbnRyb2wtYXBpXFxzcmNcXHJvdXRlc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtSb3V0ZXJ9IGZyb20nZXhwcmVzcyc7XHJcblxyXG5pbXBvcnQgUGVyc29uQ29udHJvbGxlciBmcm9tIFwiLi4vY29udHJvbGxlcnMvUGVyc29uQ29udHJvbGxlclwiO1xyXG5cclxuY29uc3Qgcm91dGUgPSBSb3V0ZXIoKTtcclxuXHJcbnJvdXRlLmdldChcIi9zZWFyY2gvOmlkXCIsIFBlcnNvbkNvbnRyb2xsZXIuc2VhcmNoU3R1ZGVudCk7XHJcbnJvdXRlLmdldChcIi9saXN0XCIsIFBlcnNvbkNvbnRyb2xsZXIubGlzdFN0dWRlbnQpO1xyXG5yb3V0ZS5nZXQoXCIvbm90ZVwiLCBQZXJzb25Db250cm9sbGVyLnN0dWRlbnROb3RlKTtcclxucm91dGUuZ2V0KFwiL2F2ZXJhZ2VcIiwgUGVyc29uQ29udHJvbGxlci5hdmVyYWdlR3JhZGVzKTtcclxucm91dGUuZ2V0KFwiL2Jlc3RcIiwgUGVyc29uQ29udHJvbGxlci5iZXN0R3JhZGVzKTtcclxuXHJcbnJvdXRlLnBvc3QoXCIvY3JlYXRlXCIsIFBlcnNvbkNvbnRyb2xsZXIuY3JlYXRlKTtcclxuXHJcbnJvdXRlLmRlbGV0ZShcIi9kZWxldGUvOmlkXCIsIFBlcnNvbkNvbnRyb2xsZXIuZGVsZXRlU3R1ZGVudCk7XHJcbnJvdXRlLnB1dChcIi91cGRhdGVcIiwgUGVyc29uQ29udHJvbGxlci51cGRhdGVTdHVkZW50KTtcclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCByb3V0ZTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "RoutePerson.js"
      ],
      "names": [
        "route",
        "get",
        "PersonController",
        "searchStudent",
        "listStudent",
        "studentNote",
        "averageGrades",
        "bestGrades",
        "post",
        "create",
        "deleteStudent",
        "put",
        "updateStudent"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;;;AAEA,IAAMA,KAAK,GAAG,sBAAd;AAEAA,KAAK,CAACC,GAAN,CAAU,aAAV,EAAyBC,6BAAiBC,aAA1C;AACAH,KAAK,CAACC,GAAN,CAAU,OAAV,EAAmBC,6BAAiBE,WAApC;AACAJ,KAAK,CAACC,GAAN,CAAU,OAAV,EAAmBC,6BAAiBG,WAApC;AACAL,KAAK,CAACC,GAAN,CAAU,UAAV,EAAsBC,6BAAiBI,aAAvC;AACAN,KAAK,CAACC,GAAN,CAAU,OAAV,EAAmBC,6BAAiBK,UAApC;AAEAP,KAAK,CAACQ,IAAN,CAAW,SAAX,EAAsBN,6BAAiBO,MAAvC;AAEAT,KAAK,UAAL,CAAa,aAAb,EAA4BE,6BAAiBQ,aAA7C;AACAV,KAAK,CAACW,GAAN,CAAU,SAAV,EAAqBT,6BAAiBU,aAAtC;eAGeZ,K",
      "sourceRoot": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\src\\routes\\",
      "sourcesContent": [
        "import {Router} from'express';\r\n\r\nimport PersonController from \"../controllers/PersonController\";\r\n\r\nconst route = Router();\r\n\r\nroute.get(\"/search/:id\", PersonController.searchStudent);\r\nroute.get(\"/list\", PersonController.listStudent);\r\nroute.get(\"/note\", PersonController.studentNote);\r\nroute.get(\"/average\", PersonController.averageGrades);\r\nroute.get(\"/best\", PersonController.bestGrades);\r\n\r\nroute.post(\"/create\", PersonController.create);\r\n\r\nroute.delete(\"/delete/:id\", PersonController.deleteStudent);\r\nroute.put(\"/update\", PersonController.updateStudent);\r\n\r\n\r\nexport default route;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1591824145069
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Pedro o mais pica\\\\Documents\\\\code_igti\\\\grades-control-api\\\\src\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Pedro o mais pica\\\\Documents\\\\code_igti\\\\grades-control-api\",\"filename\":\"C:\\\\Users\\\\Pedro o mais pica\\\\Documents\\\\code_igti\\\\grades-control-api\\\\src\\\\controllers\\\\PersonController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Pedro o mais pica\\\\Documents\\\\code_igti\\\\grades-control-api\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\src\\controllers\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api",
      "filename": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\src\\controllers\\PersonController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\src\\controllers\\PersonController.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\src\\controllers\\PersonController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\src\\controllers\\",
        "sourceFileName": "PersonController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Person = _interopRequireDefault(require(\"../models/Person\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar PersonController = /*#__PURE__*/function () {\n  function PersonController() {\n    _classCallCheck(this, PersonController);\n  }\n\n  _createClass(PersonController, [{\n    key: \"create\",\n    value: function () {\n      var _create = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _Person[\"default\"].createGrid(req.body);\n\n                return _context.abrupt(\"return\", res.json(req.body));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function create(_x, _x2) {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }()\n  }, {\n    key: \"searchStudent\",\n    value: function () {\n      var _searchStudent = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n        var dado;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                dado = _Person[\"default\"].search(req.params.id);\n\n                try {\n                  Promise.resolve(dado).then(function (value) {\n                    res.send(value);\n                  });\n                } catch (error) {\n                  res.status(400).send({\n                    Error: error.message\n                  });\n                }\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function searchStudent(_x3, _x4) {\n        return _searchStudent.apply(this, arguments);\n      }\n\n      return searchStudent;\n    }()\n  }, {\n    key: \"listStudent\",\n    value: function () {\n      var _listStudent = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n        var dado;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                dado = _Person[\"default\"].list();\n\n                try {\n                  Promise.resolve(dado).then(function (value) {\n                    res.send(value);\n                  });\n                } catch (error) {\n                  res.status(400).send({\n                    Error: error.message\n                  });\n                }\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function listStudent(_x5, _x6) {\n        return _listStudent.apply(this, arguments);\n      }\n\n      return listStudent;\n    }()\n  }, {\n    key: \"deleteStudent\",\n    value: function () {\n      var _deleteStudent = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                try {\n                  _Person[\"default\"].deleteStudent(req.params.id);\n\n                  res.send(\"Estudante deletado\");\n                } catch (error) {\n                  res.status(400).send({\n                    Error: error.message\n                  });\n                }\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function deleteStudent(_x7, _x8) {\n        return _deleteStudent.apply(this, arguments);\n      }\n\n      return deleteStudent;\n    }()\n  }, {\n    key: \"updateStudent\",\n    value: function () {\n      var _updateStudent = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                try {\n                  _Person[\"default\"].updateStudent(req.body);\n\n                  res.send(\"Estudante atualizado\");\n                } catch (error) {\n                  res.status(400).send({\n                    Error: error.message\n                  });\n                }\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function updateStudent(_x9, _x10) {\n        return _updateStudent.apply(this, arguments);\n      }\n\n      return updateStudent;\n    }()\n  }, {\n    key: \"studentNote\",\n    value: function () {\n      var _studentNote = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n        var dado;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                dado = _Person[\"default\"].studentNote(req.body);\n\n                try {\n                  Promise.resolve(dado).then(function (value) {\n                    res.send(\"\".concat(value));\n                  });\n                } catch (error) {\n                  res.status(400).send({\n                    Error: error.message\n                  });\n                }\n\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function studentNote(_x11, _x12) {\n        return _studentNote.apply(this, arguments);\n      }\n\n      return studentNote;\n    }()\n  }, {\n    key: \"averageGrades\",\n    value: function () {\n      var _averageGrades = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n        var dado;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                dado = _Person[\"default\"].averageGrades(req.body);\n\n                try {\n                  Promise.resolve(dado).then(function (value) {\n                    res.send(\"\".concat(value));\n                  });\n                } catch (error) {\n                  res.status(400).send({\n                    Error: error.message\n                  });\n                }\n\n              case 2:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function averageGrades(_x13, _x14) {\n        return _averageGrades.apply(this, arguments);\n      }\n\n      return averageGrades;\n    }()\n  }, {\n    key: \"bestGrades\",\n    value: function () {\n      var _bestGrades = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n        var dado;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                dado = _Person[\"default\"].bestGrades(req.body);\n\n                try {\n                  Promise.resolve(dado).then(function (value) {\n                    res.send(value.slice(0, 3));\n                  });\n                } catch (error) {\n                  res.status(400).send({\n                    Error: error.message\n                  });\n                }\n\n              case 2:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function bestGrades(_x15, _x16) {\n        return _bestGrades.apply(this, arguments);\n      }\n\n      return bestGrades;\n    }()\n  }]);\n\n  return PersonController;\n}();\n\nvar _default = new PersonController();\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBlcnNvbkNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiUGVyc29uQ29udHJvbGxlciIsInJlcSIsInJlcyIsIlBlcnNvbiIsImNyZWF0ZUdyaWQiLCJib2R5IiwianNvbiIsImRhZG8iLCJzZWFyY2giLCJwYXJhbXMiLCJpZCIsIlByb21pc2UiLCJyZXNvbHZlIiwidGhlbiIsInZhbHVlIiwic2VuZCIsImVycm9yIiwic3RhdHVzIiwiRXJyb3IiLCJtZXNzYWdlIiwibGlzdCIsImRlbGV0ZVN0dWRlbnQiLCJ1cGRhdGVTdHVkZW50Iiwic3R1ZGVudE5vdGUiLCJhdmVyYWdlR3JhZGVzIiwiYmVzdEdyYWRlcyIsInNsaWNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7O0lBRU1BLGdCOzs7Ozs7Ozs2RkFDU0MsRyxFQUFLQyxHOzs7OztBQUVoQkMsbUNBQU9DLFVBQVAsQ0FBa0JILEdBQUcsQ0FBQ0ksSUFBdEI7O2lEQUVPSCxHQUFHLENBQUNJLElBQUosQ0FBU0wsR0FBRyxDQUFDSSxJQUFiLEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7cUdBSVdKLEcsRUFBS0MsRzs7Ozs7O0FBQ25CSyxnQkFBQUEsSSxHQUFPSixtQkFBT0ssTUFBUCxDQUFjUCxHQUFHLENBQUNRLE1BQUosQ0FBV0MsRUFBekIsQzs7QUFDWCxvQkFBSTtBQUNGQyxrQkFBQUEsT0FBTyxDQUFDQyxPQUFSLENBQWdCTCxJQUFoQixFQUFzQk0sSUFBdEIsQ0FBMkIsVUFBQ0MsS0FBRCxFQUFXO0FBRXBDWixvQkFBQUEsR0FBRyxDQUFDYSxJQUFKLENBQVNELEtBQVQ7QUFDRCxtQkFIRDtBQUlELGlCQUxELENBS0UsT0FBT0UsS0FBUCxFQUFjO0FBQ2RkLGtCQUFBQSxHQUFHLENBQUNlLE1BQUosQ0FBVyxHQUFYLEVBQWdCRixJQUFoQixDQUFxQjtBQUNuQkcsb0JBQUFBLEtBQUssRUFBRUYsS0FBSyxDQUFDRztBQURNLG1CQUFyQjtBQUdEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O21H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QkFBSTtBQUNGTSxrQkFBQUEsT0FBTyxDQUFDQyxPQUFSLENBQWdCTCxJQUFoQixFQUFzQk0sSUFBdEIsQ0FBMkIsVUFBQ0MsS0FBRCxFQUFXO0FBQ3BDWixvQkFBQUEsR0FBRyxDQUFDYSxJQUFKLENBQVNELEtBQUssQ0FBQ1ksS0FBTixDQUFZLENBQVosRUFBYyxDQUFkLENBQVQ7QUFDRCxtQkFGRDtBQUdELGlCQUpELENBSUUsT0FBT1YsS0FBUCxFQUFjO0FBQ2RkLGtCQUFBQSxHQUFHLENBQUNlLE1BQUosQ0FBVyxHQUFYLEVBQWdCRixJQUFoQixDQUFxQjtBQUNuQkcsb0JBQUFBLEtBQUssRUFBRUYsS0FBSyxDQUFDRztBQURNLG1CQUFyQjtBQUdEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7ZUFJVSxJQUFJbkIsZ0JBQUosRSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFBlZHJvIG8gbWFpcyBwaWNhXFxEb2N1bWVudHNcXGNvZGVfaWd0aVxcZ3JhZGVzLWNvbnRyb2wtYXBpXFxzcmNcXGNvbnRyb2xsZXJzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUGVyc29uIGZyb20gXCIuLi9tb2RlbHMvUGVyc29uXCI7XHJcblxyXG5jbGFzcyBQZXJzb25Db250cm9sbGVyIHtcclxuICBhc3luYyBjcmVhdGUocmVxLCByZXMpIHtcclxuXHJcbiAgICBQZXJzb24uY3JlYXRlR3JpZChyZXEuYm9keSk7XHJcblxyXG4gICAgcmV0dXJuIHJlcy5qc29uKHJlcS5ib2R5KTtcclxuXHJcbiAgfVxyXG5cclxuICBhc3luYyBzZWFyY2hTdHVkZW50KHJlcSwgcmVzKSB7XHJcbiAgICBsZXQgZGFkbyA9IFBlcnNvbi5zZWFyY2gocmVxLnBhcmFtcy5pZClcclxuICAgIHRyeSB7XHJcbiAgICAgIFByb21pc2UucmVzb2x2ZShkYWRvKS50aGVuKCh2YWx1ZSkgPT4ge1xyXG5cclxuICAgICAgICByZXMuc2VuZCh2YWx1ZSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgcmVzLnN0YXR1cyg0MDApLnNlbmQoe1xyXG4gICAgICAgIEVycm9yOiBlcnJvci5tZXNzYWdlXHJcbiAgICAgIH0pXHJcbiAgICB9XHJcbiAgfVxyXG4gIGFzeW5jIGxpc3RTdHVkZW50KHJlcSwgcmVzKSB7XHJcbiAgICBsZXQgZGFkbyA9IFBlcnNvbi5saXN0KCk7XHJcbiAgICB0cnkge1xyXG4gICAgICBQcm9taXNlLnJlc29sdmUoZGFkbykudGhlbigodmFsdWUpID0+IHtcclxuXHJcbiAgICAgICAgcmVzLnNlbmQodmFsdWUpO1xyXG4gICAgICB9KTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHJlcy5zdGF0dXMoNDAwKS5zZW5kKHtcclxuICAgICAgICBFcnJvcjogZXJyb3IubWVzc2FnZVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcbiAgYXN5bmMgZGVsZXRlU3R1ZGVudChyZXEsIHJlcykge1xyXG4gICBcclxuICAgIHRyeSB7XHJcbiAgICAgIFBlcnNvbi5kZWxldGVTdHVkZW50KHJlcS5wYXJhbXMuaWQpXHJcbiAgICAgIHJlcy5zZW5kKFwiRXN0dWRhbnRlIGRlbGV0YWRvXCIpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgcmVzLnN0YXR1cyg0MDApLnNlbmQoe1xyXG4gICAgICAgIEVycm9yOiBlcnJvci5tZXNzYWdlXHJcbiAgICAgIH0pXHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIGFzeW5jIHVwZGF0ZVN0dWRlbnQocmVxLCByZXMpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIFBlcnNvbi51cGRhdGVTdHVkZW50KHJlcS5ib2R5KVxyXG4gICAgICByZXMuc2VuZChcIkVzdHVkYW50ZSBhdHVhbGl6YWRvXCIpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgcmVzLnN0YXR1cyg0MDApLnNlbmQoe1xyXG4gICAgICAgIEVycm9yOiBlcnJvci5tZXNzYWdlXHJcbiAgICAgIH0pXHJcbiAgICB9XHJcbiAgfVxyXG4gIGFzeW5jIHN0dWRlbnROb3RlKHJlcSwgcmVzKSB7XHJcbiAgICBsZXQgZGFkbyA9IFBlcnNvbi5zdHVkZW50Tm90ZShyZXEuYm9keSlcclxuICAgIFxyXG4gICAgdHJ5IHtcclxuICAgICAgUHJvbWlzZS5yZXNvbHZlKGRhZG8pLnRoZW4oKHZhbHVlKSA9PiB7XHJcbiAgICAgICAgcmVzLnNlbmQoYCR7dmFsdWV9YCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgcmVzLnN0YXR1cyg0MDApLnNlbmQoe1xyXG4gICAgICAgIEVycm9yOiBlcnJvci5tZXNzYWdlXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgYXN5bmMgYXZlcmFnZUdyYWRlcyhyZXEsIHJlcykge1xyXG4gICAgbGV0IGRhZG8gPSBQZXJzb24uYXZlcmFnZUdyYWRlcyhyZXEuYm9keSlcclxuICAgIFxyXG4gICAgdHJ5IHtcclxuICAgICAgUHJvbWlzZS5yZXNvbHZlKGRhZG8pLnRoZW4oKHZhbHVlKSA9PiB7XHJcbiAgICAgICAgcmVzLnNlbmQoYCR7dmFsdWV9YCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgcmVzLnN0YXR1cyg0MDApLnNlbmQoe1xyXG4gICAgICAgIEVycm9yOiBlcnJvci5tZXNzYWdlXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuICBhc3luYyBiZXN0R3JhZGVzKHJlcSwgcmVzKSB7XHJcbiAgICBsZXQgZGFkbyA9IFBlcnNvbi5iZXN0R3JhZGVzKHJlcS5ib2R5KVxyXG4gICAgXHJcbiAgICB0cnkge1xyXG4gICAgICBQcm9taXNlLnJlc29sdmUoZGFkbykudGhlbigodmFsdWUpID0+IHtcclxuICAgICAgICByZXMuc2VuZCh2YWx1ZS5zbGljZSgwLDMpKTtcclxuICAgICAgfSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICByZXMuc3RhdHVzKDQwMCkuc2VuZCh7XHJcbiAgICAgICAgRXJyb3I6IGVycm9yLm1lc3NhZ2VcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufVxyXG5leHBvcnQgZGVmYXVsdCBuZXcgUGVyc29uQ29udHJvbGxlcigpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "PersonController.js"
      ],
      "names": [
        "PersonController",
        "req",
        "res",
        "Person",
        "createGrid",
        "body",
        "json",
        "dado",
        "search",
        "params",
        "id",
        "Promise",
        "resolve",
        "then",
        "value",
        "send",
        "error",
        "status",
        "Error",
        "message",
        "list",
        "deleteStudent",
        "updateStudent",
        "studentNote",
        "averageGrades",
        "bestGrades",
        "slice"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\src\\controllers\\",
      "sourcesContent": [
        "import Person from \"../models/Person\";\r\n\r\nclass PersonController {\r\n  async create(req, res) {\r\n\r\n    Person.createGrid(req.body);\r\n\r\n    return res.json(req.body);\r\n\r\n  }\r\n\r\n  async searchStudent(req, res) {\r\n    let dado = Person.search(req.params.id)\r\n    try {\r\n      Promise.resolve(dado).then((value) => {\r\n\r\n        res.send(value);\r\n      });\r\n    } catch (error) {\r\n      res.status(400).send({\r\n        Error: error.message\r\n      })\r\n    }\r\n  }\r\n  async listStudent(req, res) {\r\n    let dado = Person.list();\r\n    try {\r\n      Promise.resolve(dado).then((value) => {\r\n\r\n        res.send(value);\r\n      });\r\n    } catch (error) {\r\n      res.status(400).send({\r\n        Error: error.message\r\n      });\r\n    }\r\n  }\r\n  async deleteStudent(req, res) {\r\n   \r\n    try {\r\n      Person.deleteStudent(req.params.id)\r\n      res.send(\"Estudante deletado\");\r\n    } catch (error) {\r\n      res.status(400).send({\r\n        Error: error.message\r\n      })\r\n    }\r\n  }\r\n  \r\n  async updateStudent(req, res) {\r\n    try {\r\n      Person.updateStudent(req.body)\r\n      res.send(\"Estudante atualizado\");\r\n    } catch (error) {\r\n      res.status(400).send({\r\n        Error: error.message\r\n      })\r\n    }\r\n  }\r\n  async studentNote(req, res) {\r\n    let dado = Person.studentNote(req.body)\r\n    \r\n    try {\r\n      Promise.resolve(dado).then((value) => {\r\n        res.send(`${value}`);\r\n      });\r\n    } catch (error) {\r\n      res.status(400).send({\r\n        Error: error.message\r\n      });\r\n    }\r\n  }\r\n\r\n  async averageGrades(req, res) {\r\n    let dado = Person.averageGrades(req.body)\r\n    \r\n    try {\r\n      Promise.resolve(dado).then((value) => {\r\n        res.send(`${value}`);\r\n      });\r\n    } catch (error) {\r\n      res.status(400).send({\r\n        Error: error.message\r\n      });\r\n    }\r\n  }\r\n  async bestGrades(req, res) {\r\n    let dado = Person.bestGrades(req.body)\r\n    \r\n    try {\r\n      Promise.resolve(dado).then((value) => {\r\n        res.send(value.slice(0,3));\r\n      });\r\n    } catch (error) {\r\n      res.status(400).send({\r\n        Error: error.message\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\nexport default new PersonController();"
      ]
    },
    "sourceType": "script",
    "mtime": 1591825875185
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Pedro o mais pica\\\\Documents\\\\code_igti\\\\grades-control-api\\\\src\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Pedro o mais pica\\\\Documents\\\\code_igti\\\\grades-control-api\",\"filename\":\"C:\\\\Users\\\\Pedro o mais pica\\\\Documents\\\\code_igti\\\\grades-control-api\\\\src\\\\models\\\\Person.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Pedro o mais pica\\\\Documents\\\\code_igti\\\\grades-control-api\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\src\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api",
      "filename": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\src\\models\\Person.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\src\\models\\Person.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\src\\models\\Person.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\src\\models\\",
        "sourceFileName": "Person.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Person = /*#__PURE__*/function () {\n  function Person() {\n    _classCallCheck(this, Person);\n  }\n\n  _createClass(Person, [{\n    key: \"createGrid\",\n    value: function () {\n      var _createGrid = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(data) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _fs[\"default\"].readFile('accounts.json', 'utf-8', function (err, dataAccount) {\n                  var dado = JSON.parse(dataAccount);\n                  var student = data.student,\n                      subject = data.subject,\n                      type = data.type,\n                      value = data.value;\n                  var json = {\n                    id: dado.nextId++,\n                    student: data[0].student,\n                    subject: data[0].subject,\n                    type: data[0].type,\n                    value: data[0].value\n                  };\n                  console.log(json);\n                  dado.grades.push(json);\n\n                  _fs[\"default\"].writeFile(\"accounts.json\", JSON.stringify(dado), function (err) {});\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function createGrid(_x) {\n        return _createGrid.apply(this, arguments);\n      }\n\n      return createGrid;\n    }()\n  }, {\n    key: \"search\",\n    value: function () {\n      var _search = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(id) {\n        var dado, accountFound;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _fs[\"default\"].readFileSync('accounts.json', 'utf-8');\n\n              case 2:\n                dado = _context2.sent;\n                accountFound = JSON.parse(dado);\n                return _context2.abrupt(\"return\", accountFound.grades.find(function (account) {\n                  return account.id == parseInt(id, 10);\n                }));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function search(_x2) {\n        return _search.apply(this, arguments);\n      }\n\n      return search;\n    }()\n  }, {\n    key: \"list\",\n    value: function () {\n      var _list = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var dado;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _fs[\"default\"].readFileSync('accounts.json', 'utf-8');\n\n              case 2:\n                dado = _context3.sent;\n                return _context3.abrupt(\"return\", JSON.parse(dado));\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function list() {\n        return _list.apply(this, arguments);\n      }\n\n      return list;\n    }()\n  }, {\n    key: \"deleteStudent\",\n    value: function () {\n      var _deleteStudent = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(id) {\n        var dado, accountFound;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return _fs[\"default\"].readFileSync('accounts.json', 'utf-8');\n\n              case 2:\n                dado = _context4.sent;\n                accountFound = JSON.parse(dado);\n                accountFound.grades = accountFound.grades.filter(function (account) {\n                  return account.id !== parseInt(id, 10);\n                });\n                console.log(accountFound);\n\n                _fs[\"default\"].writeFile(\"accounts.json\", JSON.stringify(accountFound), function (err) {});\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function deleteStudent(_x3) {\n        return _deleteStudent.apply(this, arguments);\n      }\n\n      return deleteStudent;\n    }()\n  }, {\n    key: \"updateStudent\",\n    value: function () {\n      var _updateStudent = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(body) {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _fs[\"default\"].readFile('accounts.json', 'utf-8', function (err, dataAccount) {\n                  var dado = JSON.parse(dataAccount);\n                  var oldIndex = dado.grades.findIndex(function (account) {\n                    return account.id === body.id;\n                  });\n                  dado.grades[oldIndex] = body;\n\n                  _fs[\"default\"].writeFile(\"accounts.json\", JSON.stringify(dado), function (err) {});\n                });\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function updateStudent(_x4) {\n        return _updateStudent.apply(this, arguments);\n      }\n\n      return updateStudent;\n    }()\n  }, {\n    key: \"studentNote\",\n    value: function () {\n      var _studentNote = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(body) {\n        var dado, account, count;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return _fs[\"default\"].readFileSync('accounts.json', 'utf-8');\n\n              case 2:\n                dado = _context6.sent;\n                account = JSON.parse(dado);\n                count = 0;\n                account.grades.forEach(function (student) {\n                  if (body.student === student.student && body.subject === student.subject) {\n                    count = count + student.value;\n                  }\n\n                  ;\n                });\n                return _context6.abrupt(\"return\", count);\n\n              case 7:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function studentNote(_x5) {\n        return _studentNote.apply(this, arguments);\n      }\n\n      return studentNote;\n    }()\n  }, {\n    key: \"averageGrades\",\n    value: function () {\n      var _averageGrades = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(body) {\n        var dado, account, count, total;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return _fs[\"default\"].readFileSync('accounts.json', 'utf-8');\n\n              case 2:\n                dado = _context7.sent;\n                account = JSON.parse(dado);\n                count = 0;\n                total = 0;\n                account.grades.forEach(function (student) {\n                  if (body.subject === student.subject && body.type === student.type) {\n                    count = count + student.value;\n                    total = total + 1;\n                  }\n\n                  ;\n                });\n                return _context7.abrupt(\"return\", count / total);\n\n              case 8:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function averageGrades(_x6) {\n        return _averageGrades.apply(this, arguments);\n      }\n\n      return averageGrades;\n    }()\n  }, {\n    key: \"bestGrades\",\n    value: function () {\n      var _bestGrades = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(body) {\n        var dado, account, gradeArray;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return _fs[\"default\"].readFileSync('accounts.json', 'utf-8');\n\n              case 2:\n                dado = _context8.sent;\n                account = JSON.parse(dado);\n                gradeArray = [];\n                account.grades.forEach(function (student) {\n                  if (body.subject === student.subject && body.type === student.type) {\n                    gradeArray.push(student.value);\n                  }\n\n                  ;\n                });\n                return _context8.abrupt(\"return\", gradeArray.sort(function (a, b) {\n                  return b - a;\n                }));\n\n              case 7:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function bestGrades(_x7) {\n        return _bestGrades.apply(this, arguments);\n      }\n\n      return bestGrades;\n    }()\n  }]);\n\n  return Person;\n}();\n\nvar _default = new Person();\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBlcnNvbi5qcyJdLCJuYW1lcyI6WyJQZXJzb24iLCJkYXRhIiwiZnMiLCJyZWFkRmlsZSIsImVyciIsImRhdGFBY2NvdW50IiwiZGFkbyIsIkpTT04iLCJwYXJzZSIsInN0dWRlbnQiLCJzdWJqZWN0IiwidHlwZSIsInZhbHVlIiwianNvbiIsImlkIiwibmV4dElkIiwiY29uc29sZSIsImxvZyIsImdyYWRlcyIsInB1c2giLCJ3cml0ZUZpbGUiLCJzdHJpbmdpZnkiLCJyZWFkRmlsZVN5bmMiLCJhY2NvdW50Rm91bmQiLCJmaW5kIiwiYWNjb3VudCIsInBhcnNlSW50IiwiZmlsdGVyIiwiYm9keSIsIm9sZEluZGV4IiwiZmluZEluZGV4IiwiY291bnQiLCJmb3JFYWNoIiwidG90YWwiLCJncmFkZUFycmF5Iiwic29ydCIsImEiLCJiIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7O0lBQ01BLE07QUFFSCxvQkFBYztBQUFBO0FBRWI7Ozs7O2lHQUVnQkMsSTs7Ozs7QUFDZEMsK0JBQUdDLFFBQUgsQ0FBWSxlQUFaLEVBQTZCLE9BQTdCLEVBQXNDLFVBQUNDLEdBQUQsRUFBTUMsV0FBTixFQUFzQjtBQUV6RCxzQkFBSUMsSUFBSSxHQUFHQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0gsV0FBWCxDQUFYO0FBRnlELHNCQUl0REksT0FKc0QsR0FRckRSLElBUnFELENBSXREUSxPQUpzRDtBQUFBLHNCQUt0REMsT0FMc0QsR0FRckRULElBUnFELENBS3REUyxPQUxzRDtBQUFBLHNCQU10REMsSUFOc0QsR0FRckRWLElBUnFELENBTXREVSxJQU5zRDtBQUFBLHNCQU90REMsS0FQc0QsR0FRckRYLElBUnFELENBT3REVyxLQVBzRDtBQVN6RCxzQkFBSUMsSUFBSSxHQUFHO0FBQ1JDLG9CQUFBQSxFQUFFLEVBQUVSLElBQUksQ0FBQ1MsTUFBTCxFQURJO0FBRVJOLG9CQUFBQSxPQUFPLEVBQUVSLElBQUksQ0FBQyxDQUFELENBQUosQ0FB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MUIsZUFBR29CLFlBQUgsQ0FBZ0IsZUFBaEIsRUFBaUMsT0FBakMsQzs7O0FBQWJoQixnQkFBQUEsSTtBQUNBbUIsZ0JBQUFBLE8sR0FBVWxCLElBQUksQ0FBQ0MsS0FBTCxDQUFXRixJQUFYLEM7QUFDVjRCLGdCQUFBQSxVLEdBQWEsRTtBQUNqQlQsZ0JBQUFBLE9BQU8sQ0FBQ1AsTUFBUixDQUFlYyxPQUFmLENBQXVCLFVBQUN2QixPQUFELEVBQWE7QUFDakMsc0JBQUltQixJQUFJLENBQUNsQixPQUFMLEtBQWlCRCxPQUFPLENBQUNDLE9BQXpCLElBQW9Da0IsSUFBSSxDQUFDakIsSUFBTCxLQUFjRixPQUFPLENBQUNFLElBQTlELEVBQW9FO0FBRWpFdUIsb0JBQUFBLFVBQVUsQ0FBQ2YsSUFBWCxDQUFnQlYsT0FBTyxDQUFDRyxLQUF4QjtBQUVGOztBQUFBO0FBQ0gsaUJBTkQ7a0RBUU9zQixVQUFVLENBQUNDLElBQVgsQ0FBZ0IsVUFBQ0MsQ0FBRCxFQUFHQyxDQUFIO0FBQUEseUJBQU9BLENBQUMsR0FBQ0QsQ0FBVDtBQUFBLGlCQUFoQixDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7ZUFNRSxJQUFJcEMsTUFBSixFIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcUGVkcm8gbyBtYWlzIHBpY2FcXERvY3VtZW50c1xcY29kZV9pZ3RpXFxncmFkZXMtY29udHJvbC1hcGlcXHNyY1xcbW9kZWxzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXCJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWVcIjtcclxuaW1wb3J0IGZzIGZyb20gJ2ZzJztcclxuY2xhc3MgUGVyc29uIHtcclxuXHJcbiAgIGNvbnN0cnVjdG9yKCkge1xyXG5cclxuICAgfVxyXG5cclxuICAgYXN5bmMgY3JlYXRlR3JpZChkYXRhKSB7XHJcbiAgICAgIGZzLnJlYWRGaWxlKCdhY2NvdW50cy5qc29uJywgJ3V0Zi04JywgKGVyciwgZGF0YUFjY291bnQpID0+IHtcclxuXHJcbiAgICAgICAgIGxldCBkYWRvID0gSlNPTi5wYXJzZShkYXRhQWNjb3VudCk7XHJcbiAgICAgICAgIGxldCB7XHJcbiAgICAgICAgICAgIHN0dWRlbnQsXHJcbiAgICAgICAgICAgIHN1YmplY3QsXHJcbiAgICAgICAgICAgIHR5cGUsXHJcbiAgICAgICAgICAgIHZhbHVlXHJcbiAgICAgICAgIH0gPSBkYXRhXHJcbiAgICAgICAgIGxldCBqc29uID0ge1xyXG4gICAgICAgICAgICBpZDogZGFkby5uZXh0SWQrKyxcclxuICAgICAgICAgICAgc3R1ZGVudDogZGF0YVswXS5zdHVkZW50LFxyXG4gICAgICAgICAgICBzdWJqZWN0OiBkYXRhWzBdLnN1YmplY3QsXHJcbiAgICAgICAgICAgIHR5cGU6IGRhdGFbMF0udHlwZSxcclxuICAgICAgICAgICAgdmFsdWU6IGRhdGFbMF0udmFsdWVcclxuICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgIGNvbnNvbGUubG9nKGpzb24pO1xyXG4gICAgICAgICBkYWRvLmdyYWRlcy5wdXNoKGpzb24pO1xyXG5cclxuICAgICAgICAgZnMud3JpdGVGaWxlKFwiYWNjb3VudHMuanNvblwiLCBKU09OLnN0cmluZ2lmeShkYWRvKSwgZXJyID0+IHt9KTtcclxuICAgICAgfSk7XHJcbiAgIH1cclxuXHJcbiAgIGFzeW5jIHNlYXJjaChpZCkge1xyXG4gICAgICBsZXQgZGFkbyA9IGF3YWl0IGZzLnJlYWRGaWxlU3luYygnYWNjb3VudHMuanNvbicsICd1dGYtOCcpO1xyXG4gICAgICBsZXQgYWNjb3VudEZvdW5kID0gSlNPTi5wYXJzZShkYWRvKTtcclxuXHJcbiAgICAgIHJldHVybiBhY2NvdW50Rm91bmQuZ3JhZGVzLmZpbmQoYWNjb3VudCA9PiBhY2NvdW50LmlkID09IHBhcnNlSW50KGlkLCAxMCkpO1xyXG4gICB9XHJcbiAgIGFzeW5jIGxpc3QoKSB7XHJcbiAgICAgIGxldCBkYWRvID0gYXdhaXQgZnMucmVhZEZpbGVTeW5jKCdhY2NvdW50cy5qc29uJywgJ3V0Zi04Jyk7XHJcblxyXG4gICAgICByZXR1cm4gSlNPTi5wYXJzZShkYWRvKTtcclxuICAgfVxyXG4gICBhc3luYyBkZWxldGVTdHVkZW50KGlkKSB7XHJcbiAgICAgIGxldCBkYWRvID0gYXdhaXQgZnMucmVhZEZpbGVTeW5jKCdhY2NvdW50cy5qc29uJywgJ3V0Zi04Jyk7XHJcbiAgICAgIGxldCBhY2NvdW50Rm91bmQgPSBKU09OLnBhcnNlKGRhZG8pO1xyXG5cclxuICAgICAgYWNjb3VudEZvdW5kLmdyYWRlcyA9IGFjY291bnRGb3VuZC5ncmFkZXMuZmlsdGVyKChhY2NvdW50KSA9PiBhY2NvdW50LmlkICE9PSBwYXJzZUludChpZCwgMTApKTtcclxuICAgICAgY29uc29sZS5sb2coYWNjb3VudEZvdW5kKTtcclxuICAgICAgZnMud3JpdGVGaWxlKFwiYWNjb3VudHMuanNvblwiLCBKU09OLnN0cmluZ2lmeShhY2NvdW50Rm91bmQpLCBlcnIgPT4ge30pO1xyXG5cclxuICAgfTtcclxuICAgYXN5bmMgdXBkYXRlU3R1ZGVudChib2R5KSB7XHJcbiAgICAgIGZzLnJlYWRGaWxlKCdhY2NvdW50cy5qc29uJywgJ3V0Zi04JywgKGVyciwgZGF0YUFjY291bnQpID0+IHtcclxuXHJcbiAgICAgICAgIGxldCBkYWRvID0gSlNPTi5wYXJzZShkYXRhQWNjb3VudCk7XHJcbiAgICAgICAgIGxldCBvbGRJbmRleCA9IGRhZG8uZ3JhZGVzLmZpbmRJbmRleCgoYWNjb3VudCkgPT4gYWNjb3VudC5pZCA9PT0gYm9keS5pZCk7XHJcblxyXG4gICAgICAgICBkYWRvLmdyYWRlc1tvbGRJbmRleF0gPSBib2R5O1xyXG4gICAgICAgICBmcy53cml0ZUZpbGUoXCJhY2NvdW50cy5qc29uXCIsIEpTT04uc3RyaW5naWZ5KGRhZG8pLCBlcnIgPT4ge30pO1xyXG5cclxuICAgICAgfSk7XHJcbiAgIH07XHJcbiAgIGFzeW5jIHN0dWRlbnROb3RlKGJvZHkpIHtcclxuXHJcbiAgICAgIGxldCBkYWRvID0gYXdhaXQgZnMucmVhZEZpbGVTeW5jKCdhY2NvdW50cy5qc29uJywgJ3V0Zi04Jyk7XHJcbiAgICAgIGxldCBhY2NvdW50ID0gSlNPTi5wYXJzZShkYWRvKTtcclxuICAgICAgbGV0IGNvdW50ID0gMDtcclxuICAgICAgYWNjb3VudC5ncmFkZXMuZm9yRWFjaCgoc3R1ZGVudCkgPT4ge1xyXG4gICAgICAgICBpZiAoYm9keS5zdHVkZW50ID09PSBzdHVkZW50LnN0dWRlbnQgJiYgYm9keS5zdWJqZWN0ID09PSBzdHVkZW50LnN1YmplY3QpIHtcclxuICAgICAgICAgICAgY291bnQgPSBjb3VudCArIHN0dWRlbnQudmFsdWU7XHJcbiAgICAgICAgIH07XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgcmV0dXJuIGNvdW50O1xyXG4gICB9O1xyXG4gICBhc3luYyBhdmVyYWdlR3JhZGVzKGJvZHkpIHtcclxuICAgICAgbGV0IGRhZG8gPSBhd2FpdCBmcy5yZWFkRmlsZVN5bmMoJ2FjY291bnRzLmpzb24nLCAndXRmLTgnKTtcclxuICAgICAgbGV0IGFjY291bnQgPSBKU09OLnBhcnNlKGRhZG8pO1xyXG4gICAgICBsZXQgY291bnQgPSAwO1xyXG4gICAgICBsZXQgdG90YWwgPSAwXHJcbiAgICAgIGFjY291bnQuZ3JhZGVzLmZvckVhY2goKHN0dWRlbnQpID0+IHtcclxuICAgICAgICAgaWYgKGJvZHkuc3ViamVjdCA9PT0gc3R1ZGVudC5zdWJqZWN0ICYmIGJvZHkudHlwZSA9PT0gc3R1ZGVudC50eXBlKSB7XHJcblxyXG4gICAgICAgICAgICBjb3VudCA9IGNvdW50ICsgc3R1ZGVudC52YWx1ZTtcclxuICAgICAgICAgICAgdG90YWwgPSB0b3RhbCArIDE7XHJcbiAgICAgICAgIH07XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgcmV0dXJuIGNvdW50IC8gdG90YWw7XHJcbiAgIH07XHJcblxyXG4gICBhc3luYyBiZXN0R3JhZGVzKGJvZHkpIHtcclxuICAgICAgbGV0IGRhZG8gPSBhd2FpdCBmcy5yZWFkRmlsZVN5bmMoJ2FjY291bnRzLmpzb24nLCAndXRmLTgnKTtcclxuICAgICAgbGV0IGFjY291bnQgPSBKU09OLnBhcnNlKGRhZG8pO1xyXG4gICAgICBsZXQgZ3JhZGVBcnJheSA9IFtdO1xyXG4gICAgICBhY2NvdW50LmdyYWRlcy5mb3JFYWNoKChzdHVkZW50KSA9PiB7XHJcbiAgICAgICAgIGlmIChib2R5LnN1YmplY3QgPT09IHN0dWRlbnQuc3ViamVjdCAmJiBib2R5LnR5cGUgPT09IHN0dWRlbnQudHlwZSkge1xyXG5cclxuICAgICAgICAgICAgZ3JhZGVBcnJheS5wdXNoKHN0dWRlbnQudmFsdWUpXHJcblxyXG4gICAgICAgICB9O1xyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIHJldHVybiBncmFkZUFycmF5LnNvcnQoKGEsYik9PmItYSk7XHJcbiAgIH07XHJcblxyXG5cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgbmV3IFBlcnNvbigpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Person.js"
      ],
      "names": [
        "Person",
        "data",
        "fs",
        "readFile",
        "err",
        "dataAccount",
        "dado",
        "JSON",
        "parse",
        "student",
        "subject",
        "type",
        "value",
        "json",
        "id",
        "nextId",
        "console",
        "log",
        "grades",
        "push",
        "writeFile",
        "stringify",
        "readFileSync",
        "accountFound",
        "find",
        "account",
        "parseInt",
        "filter",
        "body",
        "oldIndex",
        "findIndex",
        "count",
        "forEach",
        "total",
        "gradeArray",
        "sort",
        "a",
        "b"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Pedro o mais pica\\Documents\\code_igti\\grades-control-api\\src\\models\\",
      "sourcesContent": [
        "import \"regenerator-runtime/runtime\";\r\nimport fs from 'fs';\r\nclass Person {\r\n\r\n   constructor() {\r\n\r\n   }\r\n\r\n   async createGrid(data) {\r\n      fs.readFile('accounts.json', 'utf-8', (err, dataAccount) => {\r\n\r\n         let dado = JSON.parse(dataAccount);\r\n         let {\r\n            student,\r\n            subject,\r\n            type,\r\n            value\r\n         } = data\r\n         let json = {\r\n            id: dado.nextId++,\r\n            student: data[0].student,\r\n            subject: data[0].subject,\r\n            type: data[0].type,\r\n            value: data[0].value\r\n         };\r\n\r\n         console.log(json);\r\n         dado.grades.push(json);\r\n\r\n         fs.writeFile(\"accounts.json\", JSON.stringify(dado), err => {});\r\n      });\r\n   }\r\n\r\n   async search(id) {\r\n      let dado = await fs.readFileSync('accounts.json', 'utf-8');\r\n      let accountFound = JSON.parse(dado);\r\n\r\n      return accountFound.grades.find(account => account.id == parseInt(id, 10));\r\n   }\r\n   async list() {\r\n      let dado = await fs.readFileSync('accounts.json', 'utf-8');\r\n\r\n      return JSON.parse(dado);\r\n   }\r\n   async deleteStudent(id) {\r\n      let dado = await fs.readFileSync('accounts.json', 'utf-8');\r\n      let accountFound = JSON.parse(dado);\r\n\r\n      accountFound.grades = accountFound.grades.filter((account) => account.id !== parseInt(id, 10));\r\n      console.log(accountFound);\r\n      fs.writeFile(\"accounts.json\", JSON.stringify(accountFound), err => {});\r\n\r\n   };\r\n   async updateStudent(body) {\r\n      fs.readFile('accounts.json', 'utf-8', (err, dataAccount) => {\r\n\r\n         let dado = JSON.parse(dataAccount);\r\n         let oldIndex = dado.grades.findIndex((account) => account.id === body.id);\r\n\r\n         dado.grades[oldIndex] = body;\r\n         fs.writeFile(\"accounts.json\", JSON.stringify(dado), err => {});\r\n\r\n      });\r\n   };\r\n   async studentNote(body) {\r\n\r\n      let dado = await fs.readFileSync('accounts.json', 'utf-8');\r\n      let account = JSON.parse(dado);\r\n      let count = 0;\r\n      account.grades.forEach((student) => {\r\n         if (body.student === student.student && body.subject === student.subject) {\r\n            count = count + student.value;\r\n         };\r\n      });\r\n\r\n      return count;\r\n   };\r\n   async averageGrades(body) {\r\n      let dado = await fs.readFileSync('accounts.json', 'utf-8');\r\n      let account = JSON.parse(dado);\r\n      let count = 0;\r\n      let total = 0\r\n      account.grades.forEach((student) => {\r\n         if (body.subject === student.subject && body.type === student.type) {\r\n\r\n            count = count + student.value;\r\n            total = total + 1;\r\n         };\r\n      });\r\n\r\n      return count / total;\r\n   };\r\n\r\n   async bestGrades(body) {\r\n      let dado = await fs.readFileSync('accounts.json', 'utf-8');\r\n      let account = JSON.parse(dado);\r\n      let gradeArray = [];\r\n      account.grades.forEach((student) => {\r\n         if (body.subject === student.subject && body.type === student.type) {\r\n\r\n            gradeArray.push(student.value)\r\n\r\n         };\r\n      });\r\n\r\n      return gradeArray.sort((a,b)=>b-a);\r\n   };\r\n\r\n\r\n}\r\n\r\nexport default new Person();"
      ]
    },
    "sourceType": "script",
    "mtime": 1591825781140
  }
}